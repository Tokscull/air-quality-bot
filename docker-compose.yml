version: "3.9"
services:
  db:
    container_name: "database"
    image: postgres:15.1-alpine
    command: postgres -c 'max_connections=1000'
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "6432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
  bot:
    container_name: "bot"
    build:
      dockerfile: Dockerfile
      context: ./
    command: -prod
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - TELEGRAM_BOT_WEBHOOK_URL=${TELEGRAM_BOT_WEBHOOK_URL}
      - TELEGRAM_BOT_WEBHOOK_PORT=${TELEGRAM_BOT_WEBHOOK_PORT}
      - WAQI_API_TOKEN=${WAQI_API_TOKEN}
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
volumes:
  pg_data:

